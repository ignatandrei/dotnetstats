@using MudBlazor
@if (project == null) return;
@{
    var url = project.Project.SourceCodeUrl;
    var urlId = url.Replace("https://", "").Replace("http://", "").Replace("/", "_");
    var chartId = $"chart_{urlId}";
}
<h3>
    <a href="@project.Project.SourceCodeUrl" target="_blank">  @project.Project.Name</a>
    
    Stars for @project.LastYear : @project.LastYearStars 
</h3>
@if(project != null){

<div style="width:100%">
    <MudBlazor.MudChart ChartType="ChartType.Pie" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudBlazor.MudChart>
</div>

}
@code {

    [Parameter]
    public ProjectWithStars_null? project { get; set; }

    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.

    public string[] XAxisLabels = { };

    public List<ChartSeries> Series = new List<ChartSeries>();

    protected override void OnParametersSet()
    {
        var ordered = project!.Stars.OrderBy(p => p.DateRecording).ToArray();
        XAxisLabels = ordered.Select(p => p.DateRecording.Year.ToString()).ToArray();        
        var c = new ChartSeries();        
        c.Data = ordered.Select(p => (double)p.Count).ToArray();
        Series = new List<ChartSeries> { c };
        StateHasChanged();
    }
}
