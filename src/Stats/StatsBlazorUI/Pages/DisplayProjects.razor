@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Text.Json
@using StatsInterfaces
<script>
    import * as echarts from 'echarts';
</script>

<h2>Projects : @data?.Length 
    @if (!FinishStreaming)
    {
        <MudBlazor.MudProgressCircular Color="MudBlazor.Color.Default" Indeterminate="true" />
    }
</h2>

@if (FinishStreaming)
{
    var orderedProjectsLastYear = data!
        .OrderByDescending(p => p.LastYearStars)
        .ThenBy(p => p.Project.Name)
        .Take(10)
        .ToArray();
    Tuple<IProject, int>[]? dataDisplay = orderedProjectsLastYear.Select(it => new Tuple<IProject, int>(it.Project, it.LastYearStars)).ToArray(); ;
    <p>
        <a href="#MostPopularProjects">Most Stars Projects in last year </a>
    </p><p>
        <a href="#MostRisingProjects">Percentage Increasing Stars Projects</a>
    </p><p><a href="#MostStarsProjectAllTime">Most stars Projects all time</a>
    </p><p><a href="#allProjects">All Projects</a>
    </p>


    <div id="MostPopularProjects">Most Stars Projects in last year</div>
   
    <DisplayProjectsChart DisplayForChart="@dataDisplay" />
 
    <MudBlazor.MudExpansionPanels>
    @foreach(var prjStars in orderedProjectsLastYear ){
            string text = $"Project {prjStars.Project.Name}, Stars {prjStars.LastYearStars} ( click to expand) ";
            <MudBlazor.MudExpansionPanel Text="@text" >
            <DisplayProject project="@prjStars" />     
        </MudBlazor.MudExpansionPanel>
    }
    </MudBlazor.MudExpansionPanels>
}

@if (data?.Length > 0)
{
    <div id="allProjects"><h3> All projects </h3></div>
    <MudBlazor.MudExpansionPanels>
    @foreach (var prjStars in data)
    {
        string text = $"Project {prjStars.Project.Name}, Stars {prjStars.LastYearStars} ( click to expand) ";
        <MudBlazor.MudExpansionPanel Text="@text">
            <DisplayProject project="@prjStars" />
        </MudBlazor.MudExpansionPanel>
    }
    </MudBlazor.MudExpansionPanels>
}
@code {

    int nrSetParameters;
    [Parameter]
    public bool FinishStreaming { get; set; }
    [Parameter]
    public ProjectWithStars_null[]? data { get; set; }
    [Inject(Key = "statsconsole_host")]
    public HttpClient? httpApi { get; set; }

    
    public IQueryable<(int index, ProjectWithStars_null project)> IndexProjects =>
        (data ?? Enumerable.Empty<ProjectWithStars_null>()).Index().AsQueryable();


}




